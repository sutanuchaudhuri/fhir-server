meta {
  name: Create Practitioner
  type: http
  seq: 13
}

post {
  url: {{baseUrl}}/{{fhirVersion}}/Practitioner
  body: json
  auth: bearer
}

auth:bearer {
  token: {{authToken}}
}

headers {
  Accept: application/fhir+json
  Content-Type: application/fhir+json
}

body:json {
  {
    "resourceType": "Practitioner",
    "active": true,
    "name": [
      {
        "family": "Smith",
        "given": ["John", "Michael"],
        "prefix": ["Dr."]
      }
    ],
    "telecom": [
      {
        "system": "phone",
        "value": "555-123-4567",
        "use": "work"
      },
      {
        "system": "email",
        "value": "john.smith@hospital.com",
        "use": "work"
      }
    ],
    "address": [
      {
        "use": "work",
        "line": ["123 Medical Plaza"],
        "city": "New York",
        "state": "NY",
        "postalCode": "10001",
        "country": "US"
      }
    ],
    "gender": "male",
    "birthDate": "1975-03-15",
    "qualification": [
      {
        "identifier": [
          {
            "system": "http://example.org/medical-license",
            "value": "MD12345"
          }
        ],
        "code": {
          "coding": [
            {
              "system": "http://terminology.hl7.org/CodeSystem/v2-0360",
              "code": "MD",
              "display": "Doctor of Medicine"
            }
          ]
        },
        "period": {
          "start": "2005-06-01"
        },
        "issuer": {
          "display": "State Medical Board"
        }
      }
    ]
  }
}

script:post-response {
  if (res.status === 201) {
    console.log("Practitioner created successfully");
    console.log("Practitioner ID:", res.body.id);
    console.log("Name:", res.body.name?.[0]?.prefix?.[0], res.body.name?.[0]?.given?.join(" "), res.body.name?.[0]?.family);
    
    // Store the practitioner ID for use in other requests
    bru.setVar("lastCreatedPractitionerId", res.body.id);
  } else {
    console.log("Failed to create practitioner:", res.status, res.body);
  }
}
